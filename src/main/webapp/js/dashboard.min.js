angular.module('petcontrol', ['ui.bootstrap', 'ui.router', 'ngCookies','ngTable','ngAnimate', 'ui.bootstrap']);

'use strict';

/**
 * Route configuration for the RDash module.
 */
angular.module('petcontrol').config(['$stateProvider', '$urlRouterProvider',
    function($stateProvider, $urlRouterProvider) {

        // For unmatched routes
        $urlRouterProvider.otherwise('/');

        // Application routes
        $stateProvider
            .state('index', {
                url: '/',
                templateUrl: 'templates/dashboard.html'
            })
            .state('animais', {
                url: '/animais',
                templateUrl: 'templates/animais.html'
            })
            .state('pessoas', {
                url: '/pessoas',
                templateUrl: 'templates/pessoas.html'
            })
            .state('usuarios', {
                url: '/usuarios',
                templateUrl: 'templates/usuarios.html'
            })
            .state('ongs', {
                url: '/ongs',
                templateUrl: 'templates/ongs.html'
            })
            .state('adocoes', {
                url: '/adocoes',
                templateUrl: 'templates/adocoes.html'
            })
            .state('atendveterinario', {
                url: '/atendveterinario',
                templateUrl: 'templates/atendveterinario.html'
            });
    }
]);

/**
 * Alerts Controller
 */

angular
    .module('petcontrol')
    .controller('AlertsCtrl', ['$scope', AlertsCtrl]);

function AlertsCtrl($scope) {
    $scope.alerts = [{
        type: 'success',
        msg: 'Thanks for visiting! Feel free to create pull requests to improve the dashboard!'
    }, {
        type: 'danger',
        msg: 'Found a bug? Create an issue with as many details as you can.'
    }];

    $scope.addAlert = function() {
        $scope.alerts.push({
            msg: 'Another alert!'
        });
    };

    $scope.closeAlert = function(index) {
        $scope.alerts.splice(index, 1);
    };
}

(function() {
  'use strict';
  angular.module('petcontrol').controller('AnimaisCtrl', AnimaisCtrl);

  AnimaisCtrl.$inject = ['NgTableParams', '$scope', '$uibModal', '$q', 'AnimalService'];

  function AnimaisCtrl(NgTableParams, $scope, $uibModal, $q, AnimalService) {
    var vm = this;
    vm.openModal = _openModal;
    vm.editarAnimal = _editarAnimal;
    vm.removerAnimal = _removerAnimal;
    vm.animais = [];

    init();

    function init() {
      $q.all([
          carregarAnimais()
        ])
        .then(function() {
          refresh();
        });
    }


    function carregarAnimais() {
      return AnimalService.getTodosAnimais()
        .then(function succes(result) {
          vm.animais = result.data;
        }, function error(result) {
          console.log('error carregarAnimais:', result);
        });
    }

    function refresh() {

      vm.tableAnimais = new NgTableParams({
        count: 10
      }, {
        dataset: vm.animais
      });
    }

    function _openModal(animal) {
      var modalInstance = $uibModal.open({
        animation: true,
        templateUrl: 'templates/animaisModalCad.html',
        controller: 'AnimaisModalCadCtrl as vm',
        resolve: {
          item: angular.copy(animal)
        }
      });

      modalInstance.result.then(function(result) {

        angular.forEach(result,function(a){
          console.log(a);
          var animalNovo = vm.animais.some(function(ani){
            return ani.id === a.id;
          });
          console.log(a.id);
          console.log(animalNovo);
          if(!animalNovo){
            vm.animais.push(a);
          }else{
              angular.forEach(vm.animais,function(ani){
                if(ani.id === a.id){
                  angular.extend(ani,a);
                  console.log('encontrou', ani);
                }
              });

          }
        });
        console.log('animais',vm.animais);
        refresh();
      });
    }

    function _editarAnimal(animal) {
      _openModal(animal);
    }

    function _removerAnimal(animal) {

    }

  }
})();

(function() {
  'use strict';
  angular.module('petcontrol').controller('AnimaisModalCadCtrl', AnimaisModalCadCtrl);

  AnimaisModalCadCtrl.$inject = ['$scope', '$uibModalInstance', '$http', '$q', 'EspeciesService', '$uibModal', 'RacasService', 'CoresService', 'item', 'AnimalService', 'OngService'];

  function AnimaisModalCadCtrl($scope, $uibModalInstance, $http, $q, EspeciesService, $uibModal, RacasService, CoresService, animalEdit, AnimalService, OngService) {
    var vm = this;
    vm.especiesSelect = [];
    vm.animaisSalvos = [];
    vm.racasSelect = [];
    vm.coresSelect = [];
    vm.ongsSelect = [];
    vm.openModalCadEspecie = _openModalCadEspecie;
    vm.openModalCadRaca = _openModalCadRaca;
    vm.openModalCadCor = _openModalCadCor;
    vm.editando = animalEdit && animalEdit.id;
    vm.tituloPage = _tituloPage;

    function _openModalCadEspecie() {
      var modalInstance = $uibModal.open({
        animation: true,
        templateUrl: 'templates/especiesModalCad.html',
        controller: 'EspeciesModalCadCtrl as vm'
      });
      modalInstance.result.then(function(result) {
        vm.especiesSelect = vm.especiesSelect.concat(result);
      });
    }

    function _openModalCadRaca() {
      var modalInstance = $uibModal.open({
        animation: true,
        templateUrl: 'templates/racasModalCad.html',
        controller: 'RacasModalCadCtrl as vm'
      });
      modalInstance.result.then(function(result) {
        vm.racasSelect = vm.racasSelect.concat(result);
      });
    }

    function _openModalCadCor() {
      var modalInstance = $uibModal.open({
        animation: true,
        templateUrl: 'templates/coresModalCad.html',
        controller: 'CoresModalCadCtrl as vm'
      });
      modalInstance.result.then(function(result) {
        vm.coresSelect = vm.coresSelect.concat(result);
      });
    }

    init();

    function init() {
      carregarRacas();
      $q.all([
          carregarEspecies(),
          carregarRacas(),
          carregarCores(),
          carregarOngs()
        ])
        .then(function() {
          refresh();
        });
    }

    function refresh() {
      vm.animal = animalEdit ? animalEdit : {};
    }

    function carregarEspecies() {
      return EspeciesService.getTodasEspecies()
        .then(function successCallback(result) {
          vm.especiesSelect = result.data;
        }, function errorCallback(result) {
          alert('Ocorreu um erro ', result);
          console.log('erro ', result);
        });
    }

    function carregarRacas() {
      return RacasService.getTodasRacas()
        .then(function successCallback(result) {
          vm.racasSelect = result.data;
        }, function errorCallback(result) {
          alert('Ocorreu um erro ', result);
          console.log('erro ', result);
        });
    }

    function carregarCores() {
      return CoresService.getTodasCores()
        .then(function successCallback(result) {
          vm.coresSelect = result.data;
        }, function errorCallback(result) {
          console.log('erro ', result);
        });
    }

    function carregarOngs() {
      return OngService.getTodasOngs()
        .then(function successCallback(result) {
          vm.ongsSelect = result.data;
        }, function errorCallback(result) {
          console.log('erro ', result);
        });
    }

    vm.salvar = function(continuar) {

      salvarEspecie().then(function() {
        salvarRaca().then(function() {

          salvarCor().then(function() {

            salvarOng().then(function() {
              salvarAnimal().then(function() {
                vm.animaisSalvos.push(angular.copy(vm.animal));
                if (!continuar) {
                  $uibModalInstance.close(vm.animaisSalvos);
                } else {
                  refresh();
                }
              });
            });
          });
        });
      });
    };

    vm.fechar = function() {
      $uibModalInstance.dismiss('cancel');
    };

    function salvarEspecie() {
      var promise = $q.when();
      if (!vm.animal.especie.id) {
        var especie = {
          'descricao': vm.animal.especie
        };
        promise = EspeciesService.salvar(especie)
          .then(function(result) {
            vm.especiesSelect.push(angular.copy(result.data));
            vm.animal.especie = result.data;

          }, function(result) {
            //alert('Ocorreu um erro salvarEspecie ', result);
            console.log('erro salvarEspecie', result);
          });
      }

      return promise;
    }

    function salvarRaca() {
      var promise = $q.when();
      if (!vm.animal.raca.id) {

        var raca = {
          'descricao': vm.animal.raca
        };
        promise = RacasService.salvar(raca)
          .then(function(result) {
            vm.racasSelect.push(angular.copy(result.data));
            vm.animal.raca = result.data;

          }, function(result) {
            console.log('erro ', result);
          });
      }

      return promise;
    }

    function salvarCor() {
      var promise = $q.when();
      if (!vm.animal.cor.id) {
        var cor = {
          'descricao': vm.animal.cor
        };
        promise = CoresService.salvar(cor)
          .then(function(result) {
            vm.coresSelect.push(angular.copy(result.data));
            vm.animal.cor = result.data;

          }, function(result) {
            console.log('erro ', result);
          });
      }

      return promise;
    }

    function salvarOng() {
      var promise = $q.when();
      if (!vm.animal.ong.id) {
        var ong = {
          'nome': vm.animal.ong
        };
        promise = OngService.salvar(ong)
          .then(function(result) {
            vm.ongsSelect.push(angular.copy(result.data));
            vm.animal.ong = result.data;

          }, function(result) {
            console.log('erro ', result);
          });
      }

      return promise;
    }

    function salvarAnimal() {
      var promise = AnimalService.salvar(vm.animal)
        .then(function success(result) {
          vm.animal = result.data;
        }, function error(result) {
          console.log('erro salvarAnimal: ', result);
        });

      return promise;
    }

    function _tituloPage() {
      return vm.editando ? 'Editando os dados deste animal' : 'Cadastrando um novo animal';
    }

  }
})();

(function () {
  'use strict';
  angular.module('petcontrol').controller('AnimaisModalViewCtrl', AnimaisModalViewCtrl);

  AnimaisModalViewCtrl.$inject = ['$scope', '$uibModalInstance', '$http','items'];
 
  function AnimaisModalViewCtrl($scope, $uibModalInstance,$http,items) {
        
     if (items == 123){
       $scope.data= [{nome:'Rex',especie:{id:1,descricao:'teste'},dtNascimento:'25/07/2015',cor:{id:1,descricao:'branco'},
       status:'adotado',dono:{nome:'pedro',telefone:'4788888888'},ong:{nome:'ongteste',telefone:'4733333333'}}];
       }
        $http.get('rest/animal/RFID/'+items).
       success(function (data) {
        $scope.data = data;
      });
                                                                                                             

    $scope.fechar = function () {
      $uibModalInstance.dismiss('cancel');
    };
 
  }
})();

(function() {
  'use strict';
  angular.module('petcontrol').controller('CoresModalCadCtrl', CoresModalCadCtrl);

  CoresModalCadCtrl.$inject = ['$scope', '$uibModalInstance', '$http', '$q', 'CoresService'];

  function CoresModalCadCtrl($scope, $uibModalInstance, $http, $q, CoresService) {
    var vm = this;
    vm.coresSalvos = [];

    init();

    function init() {
      $q.all([
        refresh()
      ]);
    }

    function refresh() {
      vm.cor = {};
    }

    vm.salvar = function(continuar) {
      CoresService.salvar(vm.cor)
        .then(function(result) {
          vm.coresSalvos.push(angular.copy(result));
          if (!continuar) {
            $uibModalInstance.close(vm.coresSalvos);
          } else {
            refresh();
          }
        }, function(result) {
          alert('Ocorreu um erro ', result);
          console.log('erro ', result);
        });

    };

    vm.fechar = function() {
      $uibModalInstance.dismiss('cancel');
    };
  }
})();

(function() {
  'use strict';
  angular.module('petcontrol').controller('EspeciesModalCadCtrl', EspeciesModalCadCtrl);

  EspeciesModalCadCtrl.$inject = ['$scope', '$uibModalInstance', '$http', '$q', 'EspeciesService'];

  function EspeciesModalCadCtrl($scope, $uibModalInstance, $http, $q, EspeciesService) {
    var vm = this;
    vm.especiesSalvos = [];

    init();

    function init() {
      $q.all([
        refresh()
      ]);
    }

    function refresh() {
      vm.especie = {};
    }

    vm.salvar = function(continuar) {
      EspeciesService.salvar(vm.especie)
        .then(function(result) {
          vm.especiesSalvos.push(angular.copy(result));
          if (!continuar) {
            $uibModalInstance.close(vm.especiesSalvos);
          } else {
            refresh();
          }
        })
        .then(function(result) {
          alert('Ocorreu um erro ', result);
          console.log('erro ', result);
        });
    };

    vm.fechar = function() {
      $uibModalInstance.dismiss('cancel');
    };
  }
})();

(function () {
	'use strict';
	angular.module('petcontrol').controller('InicialCtrl',   ['NgTableParams','$scope','$uibModal','$http','EspeciesService',InicialCtrl]);

  function InicialCtrl(NgTableParams, $scope,$uibModal,$http,EspeciesService) {
    var vm = this;
    vm.openModal = _openModal;

    var data =  [{nome:'Rex',especie:{id:1,descricao:'teste'},dtNascimento:'25/07/2015',cor:{id:1,descricao:'branco'},
        status:'adotado',dono:{nome:'pedro',telefone:'4788888888'},ong:{nome:'ong2',telefone:'4733333333'}},
        {nome:'bob',especie:{id:1,descricao:'teste'},dtNascimento:'25/07/2015',cor:{id:1,descricao:'branco'},
        status:'adotado',dono:{nome:'pedro',telefone:'4788888888'},ong:{nome:'ong2',telefone:'4733333333'}},
        {nome:'ted',especie:{id:1,descricao:'teste'},dtNascimento:'25/07/2015',cor:{id:1,descricao:'branco'},
        status:'adotado',dono:{nome:'pedro',telefone:'4788888888'},ong:{nome:'ong2',telefone:'4733333333'}},
        {nome:'pody',especie:{id:1,descricao:'teste'},dtNascimento:'25/07/2015',cor:{id:1,descricao:'branco'},
        status:'adotado',dono:{nome:'pedro',telefone:'4788888888'},ong:{nome:'ong3',telefone:'4733333333'}},
        {nome:'scheid',especie:{id:1,descricao:'teste'},dtNascimento:'25/07/2015',cor:{id:1,descricao:'branco'},
        status:'adotado',dono:{nome:'pedro',telefone:'4788888888'},ong:{nome:'ong4',telefone:'4733333333'}},
        {nome:'toto',especie:{id:1,descricao:'teste'},dtNascimento:'25/07/2015',cor:{id:1,descricao:'branco'},
        status:'adotado',dono:{nome:'pedro',telefone:'4788888888'},ong:{nome:'ong4',telefone:'4733333333'}},
        {nome:'tomba',especie:{id:1,descricao:'teste'},dtNascimento:'25/07/2015',cor:{id:1,descricao:'branco'},
        status:'Naoadotado',dono:{nome:'pedro',telefone:'4788888888'},ong:{nome:'ong4',telefone:'4733333333'}}];

				vm.especies = [{'id':'teste1','title': 'teste1'},{'id':'teste','title': 'teste'},{'id':'teste3','title': 'teste3'}];//TODO fazer um resource para disponibilizar lista de especies
				vm.ongs = [{'id':'ong1','title': 'ong1'},{'id':'ong','title': 'ong'},{'id':'ong3','title': 'ong3'}];//TODO fazer um resource para disponibilizar lista de ongs

    init();

    function init() {
         $http.get('rest/animal/nadotados').
       success(function (dat) {
        data = dat;
      });
      vm.tableAnimais = new NgTableParams({
        count: 10
      }, {
        dataset: data
      });
     }


    function _openModal(size){
      var modalInstance = $uibModal.open({
      animation: true,
      templateUrl: 'templates/animaisModalView.html',
      controller: 'AnimaisModalViewCtrl',
      scope: $scope,
      size: size,
      resolve: {
        items: function () {
          return vm.rfid;
        }
        }
    });
    modalInstance.result.then(function (selectedItem) {
      vm.selected = selectedItem;
    }, function () {});
    }
  }
})();

/**
 * Master Controller
 */

angular.module('petcontrol')
    .controller('MasterCtrl', ['$scope', '$cookieStore', MasterCtrl]);

function MasterCtrl($scope, $cookieStore) {
    /**
     * Sidebar Toggle & Cookie Control
     */
    var mobileView = 992;

    $scope.getWidth = function() {
        return window.innerWidth;
    };

    $scope.$watch($scope.getWidth, function(newValue, oldValue) {
        if (newValue >= mobileView) {
            if (angular.isDefined($cookieStore.get('toggle'))) {
                $scope.toggle = ! $cookieStore.get('toggle') ? false : true;
            } else {
                $scope.toggle = true;
            }
        } else {
            $scope.toggle = false;
        }

    });

    $scope.toggleSidebar = function() {
        $scope.toggle = !$scope.toggle;
        $cookieStore.put('toggle', $scope.toggle);
    };

    window.onresize = function() {
        $scope.$apply();
    };
}

(function() {
  'use strict';
  angular.module('petcontrol').controller('PessoasCtrl', PessoasCtrl);

  PessoasCtrl.$inject = ['NgTableParams', '$scope', '$uibModal'];

  function PessoasCtrl(NgTableParams, $scope, $uibModal) {
    var vm = this;
    vm.openModal = _openModal;

    var data = [];

    init();

    function init() {
      refresh();
    }

    function refresh() {
      vm.tablePessoas = new NgTableParams({
        count: 10
      }, {
        dataset: data
      });
    }

    function _openModal(size) {
      var modalInstance = $uibModal.open({
        animation: true,
        templateUrl: 'templates/pessoasModalCad.html',
        controller: 'PessoasModalCadCtrl as vm',
        size: size
      });

      modalInstance.result.then(function(result) {
        data = data.concat(result);
        refresh();
      }, function() {
        //$log.info('Modal dismissed at: ' + new Date());
      });
    }
  }
})();

(function() {
  'use strict';
  angular.module('petcontrol').controller('RacasModalCadCtrl', RacasModalCadCtrl);

  RacasModalCadCtrl.$inject = ['$scope', '$uibModalInstance', '$http', '$q', 'RacasService'];

  function RacasModalCadCtrl($scope, $uibModalInstance, $http, $q, RacasService) {
    var vm = this;
    vm.racasSalvos = [];

    init();

    function init() {
      $q.all([
        refresh()
      ]);
    }

    function refresh() {
      vm.raca = {};
    }

    vm.salvar = function(continuar) {
      RacasService.salvar(vm.raca)
        .then(function(result) {
          console.log(result);
          vm.racasSalvos.push(angular.copy(result.data));
          if (!continuar) {
            $uibModalInstance.close(vm.racasSalvos);
          } else {
            refresh();
          }
        })
        .then(function(result) {
          alert('Ocorreu um erro ', result);
          console.log('erro ', result);
        });

    };

    vm.fechar = function() {
      $uibModalInstance.dismiss('cancel');
    };
  }
})();

/**
 * Loading Directive
 * @see http://tobiasahlin.com/spinkit/
 */

angular
    .module('petcontrol')
    .directive('rdLoading', rdLoading);

function rdLoading() {
    var directive = {
        restrict: 'AE',
        template: '<div class="loading"><div class="double-bounce1"></div><div class="double-bounce2"></div></div>'
    };
    return directive;
};

/**
 * Widget Body Directive
 */

angular
    .module('petcontrol')
    .directive('rdWidgetBody', rdWidgetBody);

function rdWidgetBody() {
    var directive = {
        requires: '^rdWidget',
        scope: {
            loading: '@?',
            classes: '@?'
        },
        transclude: true,
        template: '<div class="widget-body" ng-class="classes"><rd-loading ng-show="loading"></rd-loading><div ng-hide="loading" class="widget-content" ng-transclude></div></div>',
        restrict: 'E'
    };
    return directive;
};

/**
 * Widget Footer Directive
 */

angular
    .module('petcontrol')
    .directive('rdWidgetFooter', rdWidgetFooter);

function rdWidgetFooter() {
    var directive = {
        requires: '^rdWidget',
        transclude: true,
        template: '<div class="widget-footer" ng-transclude></div>',
        restrict: 'E'
    };
    return directive;
};

/**
 * Widget Header Directive
 */

angular
    .module('petcontrol')
    .directive('rdWidgetHeader', rdWidgetTitle);

function rdWidgetTitle() {
    var directive = {
        requires: '^rdWidget',
        scope: {
            title: '@',
            icon: '@'
        },
        transclude: true,
        template: '<div class="widget-header"><div class="row"><div class="pull-left"><i class="fa" ng-class="icon"></i> {{title}} </div><div class="pull-right col-xs-6 col-sm-4" ng-transclude></div></div></div>',
        restrict: 'E'
    };
    return directive;
};

/**
 * Widget Directive
 */

angular
    .module('petcontrol')
    .directive('rdWidget', rdWidget);

function rdWidget() {
    var directive = {
        transclude: true,
        template: '<div class="widget" ng-transclude></div>',
        restrict: 'EA'
    };
    return directive;

    function link(scope, element, attrs) {
        /* */
    }
};

(function() {
  'use strict';
  angular.module('petcontrol').service('AnimalService', AnimalService);
  AnimalService.$inject = ['$http'];

  function AnimalService($http) {
    var URL = 'http://localhost:8080/petcontrol/rest/animal';

    this.getTodosAnimais = function() {
      return $http.get(URL);
    };

    this.salvar = function(animal) {
      return $http.post(URL, animal);
    };
  }
})();

(function() {
  'use strict';
  angular.module('petcontrol').service('CoresService', CoresService);
  CoresService.$inject = ['$http'];

  function CoresService($http) {
    var URL = 'http://localhost:8080/petcontrol/rest/cor';

    this.getTodasCores = function() {
      return $http.get(URL);
    };

    this.salvar = function(cor) {
      return $http.post(URL,cor);
    };
  }
})();

(function() {
  'use strict';
  angular.module('petcontrol').service('EspeciesService', EspeciesService);
  EspeciesService.$inject = ['$http'];

  function EspeciesService($http) {
    var URL = 'http://localhost:8080/petcontrol/rest/especie';

    this.getTodasEspecies = function() {
      return $http.get(URL);
    };
    this.salvar = function(cor) {
      return $http.post(URL,cor);
    };
  }
})();

(function() {
  'use strict';
  angular.module('petcontrol').service('OngService', OngService);
  OngService.$inject = ['$http'];

  function OngService($http) {
    var URL = 'http://localhost:8080/petcontrol/rest/ong';

    this.getTodasOngs = function() {
      return $http.get(URL);
    };

    this.salvar = function(ong) {
      return $http.post(URL, ong);
    };
  }
})();

(function() {
  'use strict';
  angular.module('petcontrol').service('RacasService', RacasService);
  RacasService.$inject = ['$http'];

  function RacasService($http) {
    var URL = 'http://localhost:8080/petcontrol/rest/raca';

    this.getTodasRacas = function() {
      return $http.get(URL);
    };
    this.salvar = function(cor) {
      return $http.post(URL,cor);
    };
  }
})();
